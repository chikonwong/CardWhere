language: android
jdk: oraclejdk8
sudo: required

env:
  global:
    - ANDROID_API_LEVEL=28
    - ANDROID_BUILD_TOOLS_VERSION=28.0.3

android:
  components:
  # use the latest revision of Android SDK Tools
  - tools
  - platform-tools

  # The BuildTools version used by your project
  - build-tools-$ANDROID_BUILD_TOOLS_VERSION

  # The SDK version used to compile your project
  - android-$ANDROID_API_LEVEL

  # Google play service
  - extra-google-google_play_services
  # Android Support
  - extra-google-m2repository
  - extra-android-m2repository
  - addon-google_apis-google-$ANDROID_API_LEVEL

  # Specify at least one system image,
  # if you need to run emulator(s) during your tests
  - sys-img-armeabi-v7a-addon-google_apis-google-28

script:
  - ./gradlew build check

licenses:
  - 'android-sdk-preview-license-.+'
  - 'android-sdk-license-.+'
  - 'google-gdk-license-.+'

before_script:
  # Gradlew Permission
  - chmod +x gradlew
  # Prepare pre-accepted licenses to not be promted at installation
  - mkdir -p "$ANDROID_HOME/licenses"
  - cp ./google-licenses/* "$ANDROID_HOME/licenses/"

  # Create and Start an Emulator
  - sys-img-armeabi-v7a-google_apis-28
  # Launch emulator before the execution
  - echo no | android create avd --force -n test -t android-28 --abi google_apis/armeabi-v7a
  - emulator -avd test -no-audio -no-window &
  - android-wait-for-emulator
  - adb shell input keyevent 82 &


# Clean cache before build
before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache